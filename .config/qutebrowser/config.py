# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(True)

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')

# Which cookies to accept. With QtWebEngine, this setting also controls
# other features with tracking capabilities similar to those of cookies;
# including IndexedDB, DOM storage, filesystem API, service workers, and
# AppCache. Note that with QtWebKit, only `all` and `never` are
# supported as per-domain values. Setting `no-3rdparty` or `no-
# unknown-3rdparty` per-domain on QtWebKit will have the same effect as
# `all`. If this setting is used with URL patterns, the pattern gets
# applied to the origin/first party URL of the page making the request,
# not the request URL. With QtWebEngine 5.15.0+, paths will be stripped
# from URLs, so URL patterns using paths will not match. With
# QtWebEngine 5.15.2+, subdomains are additionally stripped as well, so
# you will typically need to set this setting for `example.com` when the
# cookie is set on `somesubdomain.example.com` for it to work properly.
# To debug issues with this setting, start qutebrowser with `--debug
# --logfilter network --debug-flag log-cookies` which will show all
# cookies being set.
# Type: String
# Valid values:
#   - all: Accept all cookies.
#   - no-3rdparty: Accept cookies from the same origin only. This is known to break some sites, such as GMail.
#   - no-unknown-3rdparty: Accept cookies from the same origin only, unless a cookie is already set for the domain. On QtWebEngine, this is the same as no-3rdparty.
#   - never: Don't accept cookies at all.
config.set('content.cookies.accept', 'all', 'devtools://*')

# Value to send in the `Accept-Language` header. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{qutebrowser_version}`: The currently
# running qutebrowser version.  The default value is equal to the
# unchanged user agent of QtWebKit/QtWebEngine.  Note that the value
# read from JavaScript is always the global value. With QtWebEngine
# between 5.12 and 5.14 (inclusive), changing the value exposed to
# JavaScript requires a restart.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36', 'https://*.slack.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allow websites to show notifications.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
config.set('content.notifications.enabled', False, 'https://anime-pictures.net')

# Bevahiour
# searchengines
c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={}', 'w': 'https://www.wikipedia.org/w/index.php?title=Special:Search&search={}', 'y': 'https://www.youtube.com/results?search_query={}', 'aw': 'https://wiki.archlinux.org/index.php?search={}', 'ap': 'https://archlinux.org/packages/?q={}', 'so': 'https://stackoverflow.com/search?q={}', 'se': 'https://stackexchange.com/search?q={}', 'ad': 'https://developer.android.com/s/results?q={}', 'g': 'https://www.google.com/search?q={}', 'gm': 'https://www.google.com/maps?q={}', 'gi': 'https://www.google.com/search?tbm=isch&q={}&tbs=imgo:1', 'ya': 'https://yandex.ru/search/?text={}', 'yai': 'https://yandex.ru/images/search?text={}'}
c.url.open_base_url = True
# tabs
c.tabs.new_position.unrelated = 'next'
c.tabs.select_on_remove = 'prev'
c.tabs.new_position.stacking = False
c.content.autoplay = False
# other
c.input.insert_mode.leave_on_load = True

# Bindings
# tabs
config.bind('<Ctrl-1>', 'tab-focus 1')
config.bind('<Ctrl-2>', 'tab-focus 2')
config.bind('<Ctrl-3>', 'tab-focus 3')
config.bind('<Ctrl-4>', 'tab-focus 4')
config.bind('<Ctrl-5>', 'tab-focus 5')
config.bind('<Ctrl-6>', 'tab-focus 6')
config.bind('<Ctrl-7>', 'tab-focus 7')
config.bind('<Ctrl-8>', 'tab-focus 8')
config.bind('<Ctrl-9>', 'tab-focus 9')
config.bind('<Ctrl-0>', 'tab-focus -1')
# other
config.bind('e','set-cmd-text -s :tab-select')
config.bind('ys','yank selection')
config.bind('x','tab-close')
config.bind('<Shift-x>','undo')
config.bind('d','hint links download')
config.bind('<Shift-j>', 'tab-prev')
config.bind('<Shift-k>', 'tab-next')
config.bind('<Shift-u>', 'run-with-count 3 tab-prev')
config.bind('<Shift-i>', 'run-with-count 3 tab-next')
config.bind('<Ctrl-j>', 'completion-item-focus --history next', mode='command')
config.bind('<Ctrl-k>', 'completion-item-focus --history prev', mode='command')
config.bind('<Ctrl-j>', 'run-with-count 10 scroll down')
config.bind('<Ctrl-k>', 'run-with-count 10 scroll up')
config.bind('<Ctrl-h>', 'run-with-count 8 scroll left')
config.bind('<Ctrl-l>', 'run-wiht-count 8 scroll right')
config.bind('<Ctrl-o>', 'set-cmd-text -s :open -b')
config.bind('<Shift-f>', 'hint links tab-fg')
config.bind('<Ctrl-f>', 'hint links tab-bg')
config.bind('<Alt-f>', 'hint --rapid links tab-bg')
config.bind('<Ctrl-i>', 'hint --first inputs')
config.bind(',b', 'bookmark-list -j -t')
config.bind(',1', 'scroll-to-perc 10')
config.bind(',2', 'scroll-to-perc 20')
config.bind(',3', 'scroll-to-perc 30')
config.bind(',4', 'scroll-to-perc 40')
config.bind(',5', 'scroll-to-perc 50')
config.bind(',6', 'scroll-to-perc 60')
config.bind(',7', 'scroll-to-perc 70')
config.bind(',8', 'scroll-to-perc 80')
config.bind(',9', 'scroll-to-perc 90')
config.bind(',m', 'selection-follow -t')
config.bind('<Ctrl-m>', 'fake-key <Enter>') 
config.bind('<Ctrl-]>', 'jseval -q document.activeElement.blur()')
# bookmarks/quickmarks
config.unbind('m')
config.bind('mq', 'quickmark-save')
config.bind('mm', 'bookmark-add {url} "misc-{title}"')
config.bind('mo', 'bookmark-add {url} "OS-{title}"')
config.bind('ms', 'bookmark-add {url} "struct-{title}"')
config.bind('mw', 'bookmark-add {url} "work-{title}"')
config.bind('mf', 'bookmark-add {url} "front-{title}"')
config.bind('ml', 'bookmark-add {url} "lang-{title}"')
config.bind('ma', 'bookmark-add {url} "android-{title}"')
config.bind('mj', 'bookmark-add {url} "java-{title}"')
config.bind('mk', 'bookmark-add {url} "kotlin-{title}"')
config.bind('<Shift-m>', 'set-cmd-text -s :bookmark-add {url} ')
# insert mode
config.bind('<Ctrl-q>', 'fake-key <Backspace>', 'insert')
config.bind('<Ctrl-w>', 'fake-key <Ctrl-Backspace>', 'insert')
config.bind('<Ctrl-e>', 'fake-key <Ctrl-Right>', 'insert')
config.bind('<Ctrl-b>', 'fake-key <Ctrl-Left>', 'insert')
config.bind('<Ctrl-l>', 'fake-key <Right>', 'insert')
config.bind('<Ctrl-h>', 'fake-key <Left>', 'insert')
config.bind('<Ctrl-f>', 'fake-key <Home>', 'insert')
config.bind('<Ctrl-g>', 'fake-key <End>', 'insert')
config.bind('<Ctrl-m>', 'fake-key <Enter>', 'insert') 
# YouTube
config.bind(',f', 'hint links spawn mpv {hint-url}')
config.bind(',s', 'hint links spawn mpv-spawn {hint-url}')
